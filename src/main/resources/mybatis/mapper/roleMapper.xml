<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.shiroDemo.dao.security.RoleDAO" >

    <resultMap id="roleMap" type="com.example.shiroDemo.domain.security.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
            <result column="userName" property="userName"/>
        </collection>
        <collection property="menus" ofType="com.example.shiroDemo.domain.security.One2Many">
            <id column="menuCode" property="menuCode"/>
            <result column="menuName" property="menuName"/>
            <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
                <id column="permissionId" property="permissionId"/>
                <result column="permissionName" property="permissionName"/>
            </collection>
        </collection>
    </resultMap>

    <sql id="queryCondition">
        <if test="id != null">and r.id = #{id}</if>
    </sql>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(*)
        FROM sys_role r
        WHERE r.status = '1'
    </select>

    <select id="findRolePermissions" resultMap="roleMap" parameterType="RoleVO">
        SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.user_name       userName,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
        LEFT JOIN sys_user u ON r.id = u.role_id AND u.status = '1'
        LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.status = '1'
        LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.status = '1'
        <include refid="queryCondition"/>
        ORDER BY r.id, p.id
    </select>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="RoleVO" >
        INSERT INTO sys_role
        (role_name,status,create_name,create_time)
        VALUES (#{roleName},#{status},#{createName},now())
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="update" parameterType="RoleVO" >
        UPDATE
        sys_role
        <set>
            <if test="roleName != null">role_name = #{roleName},</if>
            <if test="status != null">status = #{status},</if>
            <if test="modifyName != null">modify_name = #{modifyName},</if>
            modify_time = now()
        </set>
        WHERE
        id = #{id}
    </update>

    <select id="getAll" resultType="RoleVO">
        SELECT
        id ,
        role_name roleName
        FROM sys_role
        WHERE status='1'
    </select>

    <resultMap id="aRole" type="com.example.shiroDemo.domain.security.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
        </collection>
        <collection property="permissionIds" ofType="Integer">
            <id column="permissionId" property="permissionId"/>
        </collection>
    </resultMap>

    <select id="getRoleInfo" resultMap="aRole">
        SELECT
        r.id        roleId,
        r.role_name roleName,
        u.id        userId,
        p.id        permissionId
        FROM sys_role r
        LEFT JOIN sys_user u ON r.id = u.role_id AND u.status = '1'
        LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.status = '1'
        LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.id = #{roleId}
    </select>

</mapper>